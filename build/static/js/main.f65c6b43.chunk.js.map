{"version":3,"sources":["contexts/AuthContext.js","contexts/UserContext.js","views/auth/Auth.js","services/api.js","views/auth/Login.js","views/auth/Registration.js","views/chat/ChatAdmin.jsx","views/chat/ChatUser.jsx","views/error/Error.js","contexts/TokenContext.js","components/bar/bar.jsx","views/chatMessage/chatMessage.js","App.js","index.js"],"names":["AuthContext","createContext","UserContext","user","setItem","token","localStorage","setItemUser","id","username","role","created_at","fetchToken","getItem","removeToken","removeItem","AuthProvider","_ref","tokenData","children","_useState","useState","_useState2","_slicedToArray","setToken","_jsx","Provider","value","UserProvider","_ref2","userData","_useState3","_useState4","setUser","RequireAuth","_ref5","useAuth","console","log","Navigate","to","replace","RequireAdmin","_ref6","useUser","RequireUser","_ref7","useContext","API_SERVER","apiInstance","axios","create","baseURL","headers","interceptors","request","use","config","Promise","resolve","error","reject","response","API","_createClass","_classCallCheck","Login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","post","sent","abrupt","stop","_x","apply","arguments","Registration","_callee2","_context2","_x2","GetMe","_callee3","_context3","get","concat","ChatGetAdmin","_ref4","_callee4","_context4","_x3","_x4","ChatGetUser","_callee5","_context5","_x5","_x6","ChatGet","_callee6","_context6","_x7","_x8","CreateMessage","_callee7","_context7","_x9","_x10","CreateMessageFiles","_ref8","_callee8","params","_context8","_x11","_x12","_x13","DownloadFile","_ref9","_callee9","file_id","filename","url","href","anchorElement","_context9","method","responseType","window","URL","createObjectURL","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","_x14","_x15","_x16","navigate","useNavigate","_useState5","_useState6","setError","login","event","me","preventDefault","FormData","currentTarget","password","access_token","t0","detail","message","Box","sx","flexGrow","_jsxs","Link","Container","component","maxWidth","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","type","Button","mb","Grid","container","item","register","ChatAdmin","chats","setChats","Date","now","useEffect","fetchData","_me","undefined","interval","setInterval","clearInterval","listChats","map","index","React","Fragment","ListItem","ListItemButton","onClick","chat_id","state","ListItemAvatar","Avatar","bgcolor","deepOrange","toUpperCase","ListItemText","primary","secondary","color","last_message","substring","Divider","boxShadow","borderRadius","px","py","List","width","Error","Bar","AppBar","position","Toolbar","mr","ChatBubbleOutlineIcon","messages","text","sender","ChatMessage","input","setInput","fileInput","useRef","setMessages","newMessageSet","_useState7","_useState8","fileList","setFileList","_useState9","_useState10","files","setFiles","useLocation","status","height","overflow","p","Message","user_id","backgroundColor","direction","justifyContent","spacing","xs","size","placeholder","onChange","target","file","multiple","style","ref","e","fs","_toConsumableArray","current","AttachFileIcon","formData","formDataFiles","i","msg","parseInt","append","length","_ref3","messagesEndRef","isBot","_messagesEndRef$curre","scrollIntoView","behavior","scrollToBottom","Paper","ml","App","fetchUser","title","StrictMode","BrowserRouter","Routes","Route","path","element","ChatUser","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.f65c6b43.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);","import { createContext } from \"react\";\n\nexport const UserContext = createContext({user: {}});","import { useContext, useState } from \"react\";\nimport { useLocation, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { UserContext } from \"../../contexts/UserContext\";\n\nexport const setItem = (token) => {\n    localStorage.setItem('token', token);\n};\n\nexport const setItemUser = (user) => {\n    localStorage.setItem('user_id', user.id);\n    localStorage.setItem('username', user.username);\n    localStorage.setItem('role', user.role);\n    localStorage.setItem('created_at', user.created_at);\n};\n\nexport const fetchUser = () => {\n    let user = {username: localStorage.getItem('username'),\n            id: localStorage.getItem('user_id'),\n            role: localStorage.getItem('role'),\n            created_at: localStorage.getItem('created_at')\n        }\n        console.log(user)\n    return user;\n};\n\nexport const fetchToken = () => {\n    return localStorage.getItem('token');\n};\n\nexport const removeToken = () => {\n    localStorage.removeItem(\"token\");\n}\n\nexport const AuthProvider = ({ tokenData, children }) => {\n    let [token, setToken] = useState(tokenData);\n    return (\n        <AuthContext.Provider value={{token, setToken}}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const UserProvider = ({ userData, children }) => {\n    let [user, setUser] = useState(userData);\n    return (\n        <UserContext.Provider value={{user, setUser}}>\n            {children}\n        </UserContext.Provider>\n    );\n}\n\nexport function PrivatePath({children}) {\n    let token = useAuth();\n    //console.log(token)\n    if(!token.token || token.token === \"\") {\n        return <Navigate to='/login' replace />\n    }\n    return children\n};\n\nexport function PrivateRoute({...rest}) {\n    let { token } = useAuth();\n    //console.log(token.token)\n    if (!token || token === \"\"){\n        return (\n        <Navigate to='/login' replace/>\n        )\n    };\n    return <Route {...rest} />\n};\n\nexport function RequireAuth({children}) {\n    const token = useAuth();\n    console.log(token)\n    if(!token.token || token.token === \"\") {\n        return <Navigate to='/login' replace />\n    }\n    return children\n\n}\n\nexport function RequireAdmin({children}) {\n    const user = useUser();\n    if (user.user.role === \"guest\"){\n        return <Navigate to='/error' replace />\n    }\n    return children\n}\n\nexport function RequireUser({children}) {\n    const user = useUser();\n    if (user.user.role === \"superuser\"){\n        return <Navigate to='/chat/admin' replace />\n    }\n    return children\n}\n\nexport const useAuth = () => useContext(AuthContext);\nexport const useUser = () => useContext(UserContext);","import axios from \"axios\";\nimport { fetchToken } from \"../views/auth/Auth\";\n\nconst API_SERVER = \"https://wiseapi.ru/\";\n//const API_SERVER = \"http://localhost:8002/\";\n\nconst apiInstance = axios.create({\n    baseURL: API_SERVER,\n    headers: { \"Content-Type\": \"application/json\", \"accept\": \"application/json\" },\n});\n\napiInstance.interceptors.request.use(\n    (config) => {\n        return Promise.resolve(config)\n    },\n    (error) => Promise.reject(error)\n);\n\napiInstance.interceptors.response.use(\n    (response) => Promise.resolve(response),\n    (error) => {\n        return Promise.reject(error);\n    }\n)\n\nclass API {\n    \n    static Login = async (data) => {\n        const response = await apiInstance.post(`login`, data, {\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"}\n            });\n        return response.data;\n    }\n\n    static Registration = async (data) => {\n        const response = await apiInstance.post(`user/create`, data);\n        return response.data;\n    }\n\n    static GetMe = async () => {\n        const response = await apiInstance.get('user/me', {\n            headers: {\n                'Authorization': `Bearer ${fetchToken()}`\n            }\n        });\n        return response;\n    }\n\n    static ChatGetAdmin = async (data, token) => {\n        const response = await apiInstance.get(`chat/admin/${data}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        return response;\n    }\n\n    static ChatGetUser = async (data, token) => {\n        const response = await apiInstance.get(`chat/user/${data}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n        return response;\n    }\n\n    static ChatGet = async (data, token) => {\n        const response = await apiInstance.get(`chat/${data}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        return response;\n    }\n\n    static CreateMessage = async (data, token) => {\n        const response = await apiInstance.post(`/chat/message/create`, data, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                }\n            });\n        return response.data;\n    }\n\n    static CreateMessageFiles = async (data, params, token) => {\n        const response = await apiInstance.post(`/chat/message_file/create`, data, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n                },\n            params: params\n            });\n        return response.data;\n    }\n\n    static DownloadFile = async (file_id, filename, token) => {\n        /*const response = await apiInstance.get(`chat/download/${file_id}`, {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': \"application/octet-stream\"\n                }\n            })*/\n\n            const url = API_SERVER + `chat/download/${file_id}`;\n            const response = await axios({\n                url,\n                method: 'GET',\n                responseType: 'blob',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': \"application/octet-stream\"\n                }\n              });\n        const href = window.URL.createObjectURL(response.data);\n\n        const anchorElement = document.createElement('a');\n\n        anchorElement.href = href;\n        anchorElement.download = filename;\n\n        document.body.appendChild(anchorElement);\n        anchorElement.click();\n\n        document.body.removeChild(anchorElement);\n        window.URL.revokeObjectURL(href);\n    }\n}\n\nexport default API;","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Container, Typography, FormControlLabel, Checkbox, Grid} from '@mui/material';\n\nimport API from '../../services/api';\n\nimport { fetchToken, setItem, removeToken, useAuth, useUser, setItemUser } from './Auth';\n\n\nexport default function Login() {\n\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null);\n  let token = useAuth(); \n  let user = useUser();\n\n  const login = async (event) => {\n    \n    \n    if (event) {\n      event.preventDefault();\n    }\n    try {\n      const data = new FormData(event.currentTarget);\n      if ((data.get(\"username\") == \"\") & (data.get(\"password\") == \"\")) {\n        return;\n      } \n      console.log('login')\n      console.log({\n        username: data.get(\"username\"),\n        password: data.get(\"password\")\n      })\n      let response = await API.Login({\n        username: data.get(\"username\"),\n        password: data.get(\"password\")\n      });\n      console.log(response.access_token)\n      if (response.access_token) {\n        console.log(response.access_token)\n        token.setToken(response.access_token)\n        setItem(response.access_token)\n        \n\n        let me = await API.GetMe(response.access_token);\n        console.log(me.data)\n        user.setUser(me.data)\n        setItemUser(me.data)\n        //console.log(user.user)\n        setError(null)\n        if (me.data.role === \"superuser\"){\n          navigate('/admin/chat')\n        } else {\n          navigate('/user/chat')\n        }\n        \n      }\n    } catch (e) {\n      removeToken();\n      token.setToken(null);\n      user.setUser({})\n      console.log(e)\n      if (e.response){ \n        setError(e.response.data.detail);\n      }\n      else if (e.request) {\n        setError(e.message)\n      } else {\n        setError(e.message)\n      }\n    }     \n  };\n\n  /*const login = () => {\n    if (username=='' & password ==''){\n      return\n    } else { \n      axios.post('http://127.0.0.1:8002/login', {\n        username: username,\n        password: password\n      })\n      .then(function(response){\n        console.log(response.data.token, 'response.data.token')\n        if(response.data.token){\n          setToken(response.data.token)\n          navigate('/chat');\n        }\n      })\n      .catch(function(error){\n        console.log(error, 'error');\n      })\n    }\n  }*/\n  return(\n    <Box sx={{ flexGrow: 1 }}>\n      {\n        fetchToken() ?\n        (<div>\n          <p>you are logged in</p>\n          <Link to=\"/user/chat\">Click to login</Link>\n          </div>\n          )\n        :\n        (\n          <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{  \n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={login} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            \n            <Grid item>\n              <Link to={'/registration'} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n        )\n      }\n      </Box>\n    /*<div style={{minHeight:800, marginTop:30}}>\n      <h1>login page</h1>\n      <div style={{marginTop:30}}>\n      {\n        \n        fetchToken()\n         ?\n         (\n          <div>\n          <p>you are logged in</p>\n          <Link to=\"/chat\">Click to login</Link>\n          </div>\n          ):\n          (\n           \n            <div>\n\n               <form>\n                   <label style={{marginRight: 10 }}>Input Username</label>\n                   <input type='text' onChange={(e)=>setUsername(e.target.value)}/>\n\n                   <label style={{marginRight: 10 }}>Input Password</label>\n                   <input type='text' onChange={(e)=>setPassword(e.target.value)}/>\n\n                   <button type='button' onClick={login}>Login</button>   \n               </form>\n\n            </div>\n        )\n      }\n      </div>\n    </div>  */\n    \n)\n  }","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Container, Typography, FormControlLabel, Checkbox, Grid} from '@mui/material';\n\nimport API from '../../services/api';\n\nimport { fetchToken, setItem, removeToken, useAuth, useUser } from './Auth';\n\n\nexport default function Registration() {\n\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null);\n  let token = useAuth(); \n  let user = useUser();\n\n  const register = async (event) => {\n    \n    \n    if (event) {\n      event.preventDefault();\n    }\n    try {\n      const data = new FormData(event.currentTarget);\n      if ((data.get(\"username\") == \"\") & (data.get(\"password\") == \"\")) {\n        return;\n      } \n   \n      let response = await API.Registration({\n        username: data.get(\"username\"),\n        password: data.get(\"password\")\n      });\n      console.log(response)\n      if (response.username) {\n        //console.log(response.access_token)\n        \n        \n        \n        \n        setError(null)\n        navigate('/login')\n      }\n    } catch (e) {\n      \n      if (e.response){ \n        setError(e.response.data.detail);\n      }\n      else if (e.request) {\n        setError(e.message)\n      } else {\n        setError(e.message)\n      }\n      navigate('/registration')\n    }     \n  };\n\n  \n  return(\n    <Box sx={{ flexGrow: 1 }}>\n      {\n        fetchToken() ?\n        (<div>\n          <p>you are logged in</p>\n          <Link to=\"/user/chat\">Click to login</Link>\n          </div>\n          )\n        :\n        (\n          <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{  \n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {error}\n        </Typography>\n        <Box component=\"form\" onSubmit={register} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          \n        </Box>\n      </Box>\n    </Container>\n        )\n      }\n      </Box>\n    \n    \n)\n  }","import React, { Component , useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, Typography, Grid, List, ListItem, ListItemText, ListItemButton } from '@mui/material';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { deepOrange, deepPurple } from '@mui/material/colors';\nimport Divider from '@mui/material/Divider';\nimport API from '../../services/api';\nimport { useAuth, useUser } from '../auth/Auth';\nimport { ChatModel } from '../../model/ChatModel';\n\nexport default function ChatAdmin() {\n  const navigate = useNavigate()\n  const [chats, setChats] = useState([]);\n  const [time, setTime] = useState(Date.now());\n  let user = useUser();\n  let token = useAuth();\n  \n\n  const handleChatClick = (params) => (event) => {\n    //console.log(params)\n    navigate(\"/admin/chat/messages\", { state: { params } })\n  }\n\n  useEffect(() => {\n    let fetchData = async () => {\n      \n      try {\n        if (user.user.id === undefined){\n          let me = await API.GetMe(token.token);\n          console.log(me.data)\n          user.setUser(me.data)\n          console.log(user)\n          \n        } else {\n          const data = await API.ChatGetAdmin(user.user.id, token.token);\n          setChats(data.data);\n        }\n        \n      } catch(e){\n        console.log(user.user)\n        let me = await API.GetMe(token.token);\n        console.log(token.token)\n        user.setUser(me.data)\n      }\n    }\n    \n    const interval = setInterval(() => fetchData(), 1000);\n    return () => {\n      \n      clearInterval(interval);\n    };\n  }, []);\n  const listChats = chats.map((user, index) => \n  <React.Fragment>\n    <ListItem key={index}>\n    <ListItemButton alignItems=\"flex-start\" onClick={handleChatClick({chat_id: user.id})}>\n      <ListItemAvatar>\n          <Avatar sx={{ bgcolor: deepOrange[500] }}>{user.user.username[0].toUpperCase()}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n          primary={user.user.username}\n          secondary={\n            <React.Fragment>\n              <Typography\n                sx={{ display: 'inline' }}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n              >\n                {user.last_message.username}\n              </Typography>\n              {` - ${user.last_message.message.substring(0, 50)}...`}\n            </React.Fragment>\n          }\n        />\n      \n      \n    </ListItemButton>\n    \n    </ListItem>\n    <Divider  variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n    return (\n      <Container component=\"main\" maxWidth=\"m\">\n        <Box\n        sx={{\n          boxShadow: 3,\n          borderRadius: 2,\n          px: 4,\n          py: 6,\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Chat\n        </Typography>\n        <List sx={{ width: '100%', maxWidth: 460, bgcolor: 'background.paper' }}>\n              {listChats}\n            </List>\n        \n      </Box>\n        </Container>\n    );\n  }","import React, { Component , useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, Typography, Grid, List, ListItem, ListItemText, ListItemButton, Button, TextField } from '@mui/material';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { deepOrange, deepPurple } from '@mui/material/colors';\nimport Divider from '@mui/material/Divider';\nimport API from '../../services/api';\nimport { useAuth, useUser } from '../auth/Auth';\nimport { ChatModel } from '../../model/ChatModel';\n\nexport default function ChatAdmin() {\n  const navigate = useNavigate()\n  const [chats, setChats] = useState([]);\n  const [time, setTime] = useState(Date.now());\n  const [chat, setChat] = useState({});\n  let user = useUser();\n  let token = useAuth();\n  let user_chats = null\n\n\n  const handleChatClick = (params) => (event) => {\n    //console.log(params)\n    navigate(\"/user/chat/messages\", { state: { params } })\n  }\n\n  useEffect(() => {\n    let fetchData = async () => {\n      \n      try {\n        if (user.user.id === undefined){\n          let me = await API.GetMe(token.token);\n          console.log(me.data)\n          user.setUser(me.data)\n          console.log(user)\n          \n        } else {\n          const data = await API.ChatGetUser(user.user.id, token.token);\n          //console.log(data.data)\n          \n          setChats(data.data);\n        }\n        \n      } catch(e){\n        console.log(e)\n        let me = await API.GetMe(token.token);\n        console.log(token.token)\n        user.setUser(me.data)\n      }\n    }\n    \n    const interval = setInterval(() => fetchData(), 1000);\n    return () => {\n      \n      clearInterval(interval);\n    };\n  }, []);\n  const listChats = chats.map((user, index) => \n  <React.Fragment>\n    <ListItem key={index}>\n    <ListItemButton alignItems=\"flex-start\" onClick={handleChatClick({chat_id: user.id})}>\n      <ListItemAvatar>\n          <Avatar sx={{ bgcolor: deepOrange[500] }}>{user.user.username[0].toUpperCase()}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n          primary={user.user.username}\n          secondary={\n            <React.Fragment>\n              <Typography\n                sx={{ display: 'inline' }}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n              >\n                {user.last_message.username}\n              </Typography>\n              {` - ${user.last_message.message.substring(0, 50)}...`}\n              \n              \n            </React.Fragment>\n          }\n        />\n      \n      \n    </ListItemButton>\n    \n    </ListItem>\n    <Divider  variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n    return (\n      <Container component=\"main\" maxWidth=\"m\">\n        <Box\n        sx={{\n          boxShadow: 3,\n          borderRadius: 2,\n          px: 4,\n          py: 6,\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Chat\n        </Typography>\n        <List sx={{ width: '100%', maxWidth: 460, bgcolor: 'background.paper' }}>\n            {listChats}\n            </List>\n      </Box>\n        </Container>\n    );\n  }","export default function Error(){\n    return (\n        <h4>Permission denied!</h4>\n    )\n}","import { createContext } from \"react\";\n\nexport const TokenContext = createContext();","import { Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\n\nimport { fetchToken, removeToken, useAuth, useUser } from \"../../views/auth/Auth\";\n\n\nexport default function Bar(){\n    const navigate = useNavigate()\n    let token = useAuth(); \n    let user = useUser();\n    const go_login = () => {\n        navigate('/login')\n    };\n\n    const handleWise = () => {\n        if (user.user.role == \"superuser\"){\n            navigate(\"/admin/chat\")\n        } else {\n            navigate(\"user/chat\")\n        }\n    }\n\n    const logout = () => {\n        removeToken()\n        token.setToken(null);\n        user.setUser({})\n        navigate('/login')\n    }\n    return (\n        <Fragment>\n            <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                <Box mr={2}>\n                    <ChatBubbleOutlineIcon />\n                    </Box>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                <Button color=\"inherit\" onClick={handleWise}>Wise Chat</Button>\n                </Typography>\n                {\n                fetchToken() ?\n                (<Button color=\"inherit\" onClick={logout}>Logout</Button>):\n                (<Button color=\"inherit\" onClick={go_login}>Login</Button>)\n                }\n                </Toolbar>\n            </AppBar>\n            </Box>\n        </Fragment>\n    )\n}","import React, { Component , useState, useEffect, useRef} from 'react';\nimport { Box, Grid, TextField, Paper, Typography, Button, Avatar, Link} from '@mui/material';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth, useUser, removeToken } from '../auth/Auth';\nimport API from '../../services/api';\n\nconst messages = [\n    { id: 1, text: \"Hi there!\", sender: \"bot\" },\n    { id: 2, text: \"Hello!\", sender: \"user\" },\n    { id: 3, text: \"How can I assist you today?\", sender: \"bot\" },\n  ];\n\nexport default function ChatMessage(){\n  const navigate = useNavigate();\n    const [input, setInput] = useState(\"\");\n    const fileInput = useRef();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, newMessageSet] = useState({});\n    const [fileList, setFileList] = useState([]);\n    const [files, setFiles] = useState([]);\n    let user = useUser();\n    let token = useAuth();\n    \n    const {state} = useLocation();\n    const chat_id = state.params.chat_id;\n    //console.log(chat_id)\n\n    const handleSend = () => {\n      //input.trim() !== \"\"\n        if (1) {\n            newMessageSet()\n            let fetchData = async () => {\n          \n                try {\n                    console.log(user.user.id)\n                    console.log({\n                        chat_id: chat_id,\n                        user_id: parseInt(user.user.id),\n                        message: input\n                    })\n                    let formData = new FormData();\n                        formData.append('chat_id', chat_id);\n                        formData.append('user_id', parseInt(user.user.id));\n                        formData.append('message', input);\n                    if (files.length !== 0){\n                      let formDataFiles = new FormData();\n                      for (var i = 0; i < files.length; i++){\n                            formDataFiles.append('files',files[i])\n                      }\n                      console.log(formDataFiles.get(\"files\"))\n                      console.log(formData.get(\"chat_id\"))\n                      let msg = input ? formData.get(\"message\") : 'files'\n                      const dat = await API.CreateMessageFiles(formDataFiles, {\n                        chat_id: formData.get(\"chat_id\"),\n                        user_id: formData.get(\"user_id\"),\n                        message: msg,\n                    }, token.token);\n                    setFiles([]);\n                    }\n                    else {\n                      const dat = await API.CreateMessage({\n                        chat_id: formData.get(\"chat_id\"),\n                        user_id: formData.get(\"user_id\"),\n                        message: formData.get(\"message\")\n                    }, token.token);\n                    }\n                    \n                    //console.log(dat.data)\n                    //setMessages(data.data.messages)\n                    //console.log(messages)\n                    //setChats(data.data);\n                  \n                  \n                } catch(e){\n                  console.log(e)\n                }\n              }\n              fetchData();\n          //console.log(data);\n          //console.log(chat_id);\n          //console.log(user.user.id)\n          setInput(\"\");\n        }\n      };\n\n    const handleInputChange = (event) => {\n        setInput(event.target.value);\n      };\n\n    const handleFileChange = (e) => {\n      if (e.target.files){\n        setFileList(e.target.files);\n        //console.log(e.target.files)\n        const fs = e.target.files ? [...e.target.files] : [];\n        //console.log(fs)\n        setFiles(fs);\n      }\n      \n      console.log(fileList)\n\n    }\n    const uploadFile = () => {\n      fileInput.current.click();\n    }\n\n      useEffect(() => {\n        let fetchData = async () => {\n          \n          try {\n            if (user.user.id === undefined){\n              let me = await API.GetMe(token.token);\n              //console.log(me.data)\n              user.setUser(me.data)\n              //console.log(user)\n              \n            } else {\n              const data = await API.ChatGet(chat_id, token.token);\n              //console.log(user.user.id)\n              setMessages(data.data.messages)\n              //console.log(data.data.messages)\n              //setChats(data.data);\n            }\n            \n          } catch(e){\n            console.log(e.response.status)\n            if (e.response.status == 401){\n              removeToken()\n              token.setToken(null);\n              user.setUser({})\n              navigate('/login')\n            }\n            //let me = await API.GetMe(token.token);\n            //console.log(token.token)\n            //user.setUser(me.data)\n          }\n        }\n        \n        const interval = setInterval(() => fetchData(), 1000);\n        return () => {\n          \n          clearInterval(interval);\n        };\n      }, [messages]);\n\n      \n    return (\n        <Box\n      sx={{\n        height: \"90vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        bgcolor: \"grey.200\",\n      }}\n    >\n      <Box sx={{ flexGrow: 1, overflow: \"auto\", p: 2 }}>\n        {messages.map((message) => (\n          <Message key={message.id} message={message} user_id={user.user} files={message.files}/>\n        ))}\n      </Box>\n      <Box sx={{ p: 3, backgroundColor: \"background.default\" }}>\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={0.5}>\n        \n          <Grid item xs={8}>\n    \n            <TextField\n            \n              fullWidth\n              size=\"small\"\n              placeholder=\"Type a message\"\n              variant=\"outlined\"\n              value={input}\n              onChange={handleInputChange}\n            />\n            {files.map((file, index) =>(\n\n              <div key={index}>{`${file.name}`}</div>\n\n\n            ))}\n\n          </Grid>\n          <Grid item xs>\n\n          <input type=\"file\" multiple style={{ \"display\": \"none\" }} ref={fileInput} onChange={handleFileChange} />   \n          <Button fullWidth color=\"inherit\" size=\"large\"  onClick={uploadFile}>\n          <AttachFileIcon></AttachFileIcon>\n          \n          </Button>      \n     \n          </Grid>\n          <Grid item xs>\n\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"primary\"\n              variant=\"contained\"\n              //endIcon={<SendIcon />}\n              onClick={handleSend}\n            >\n              Send\n            </Button>\n\n          </Grid>\n          \n        </Grid>\n      </Box>\n    </Box>\n    )\n\n}\n\nconst Message = ({ message , user_id, files}) => {\n  let token = useAuth();\n  const messagesEndRef = useRef(null)\n  //console.log(user_id)\n    const isBot = 1 == message.user_id;\n    const scrollToBottom = () => {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    const downloadFile = (file_id, filename) => (event) => {\n      console.log(file_id, filename)\n      let fetchData = async () => {\n        const data = await API.DownloadFile(file_id, filename, token.token)\n      }\n      fetchData();\n  }\n  \n    useEffect(() => {\n      scrollToBottom()\n    }, [messages]);\n  \n  \n    return (\n      <Box\n        sx={{\n          display: \"flex\",\n          mb: 2,\n          flexDirection: isBot ? \"row\" : \"row-reverse\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ bgcolor: isBot ? \"primary.main\" : \"secondary.main\" }}>\n          {user_id.role == \"superuser\" ? (isBot ? \"W\" : \"U\"):(isBot ? \"W\" : user_id.username[0].toUpperCase())}\n          \n        </Avatar>\n        <Paper\n          variant=\"outlined\"\n          sx={{\n            p: 2,\n            ml: isBot ? 1 : 0,\n            mr: isBot ? 0 : 1,\n            backgroundColor: isBot ? \"#F5F5F5\" : \"#F5F5F5\",\n            borderRadius: isBot ? \"20px 20px 20px 5px\" : \"20px 20px 5px 20px\",\n          }}\n        >\n          <Typography variant=\"body1\">{message.message}</Typography>\n          {files.map((file) => (\n           <Box sx={{ flexGrow: 1, overflow: \"auto\", p: 1 }}>\n            <Link component=\"button\" variant=\"body2\" color=\"#2196F3\" onClick={downloadFile(file.id, file.name)}>{file.name}</Link>\n            </Box>\n          ))}\n          \n          \n        </Paper>\n        \n        <div ref={messagesEndRef} />\n      </Box>\n    );\n  };\n/*{user_chats === 1 ? \n    (\n        <List sx={{ width: '100%', maxWidth: 460, bgcolor: 'background.paper' }}>\n        {listChats}\n        </List>\n    ) \n    : \n    (\n        <Box\n            sx={{\n                //height: \"50vh\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                bgcolor: \"grey.200\",\n            }}\n            >\n                <Box sx={{ p: 2, backgroundColor: \"background.default\" }}>\n                <Grid container spacing={2}>\n                <Grid item xs={10}>\n                    <TextField\n                    size=\"small\"\n                    fullWidth\n                    placeholder=\"Type a message\"\n                    variant=\"outlined\"\n                    value={'wfewefwef'}\n                    //onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={2}>\n                    <Button\n                    fullWidth\n                    color=\"primary\"\n                    variant=\"contained\"\n                    //endIcon={<SendIcon />}\n                    //onClick={handleSend}\n                    >\n                    Send\n                    </Button>\n                </Grid>\n                </Grid>\n            </Box>\n        </Box>\n    )}*/","import React, { Component, useEffect } from 'react';\nimport {Routes, Route, Navigate, BrowserRouter } from \"react-router-dom\"\nimport Login from './views/auth/Login';\nimport Registration from './views/auth/Registration';\nimport ChatAdmin from './views/chat/ChatAdmin';\nimport ChatUser from './views/chat/ChatUser';\nimport Error from './views/error/Error';\nimport { AuthContext } from './contexts/AuthContext';\nimport { TokenContext } from './contexts/TokenContext';\n\nimport { AuthProvider, RequireAdmin, RequireAuth, UserProvider, fetchToken , RequireUser, fetchUser} from './views/auth/Auth';\nimport Bar from './components/bar/bar';\nimport ChatMessage from './views/chatMessage/chatMessage';\n\nexport default function App() {\n  let token = fetchToken();\n  let user = fetchUser();\n\n  useEffect(() => {\n    document.title = \"WISE+\";\n  }, []);\n  \n  return (\n      <React.StrictMode>\n      <BrowserRouter>\n      \n      <AuthProvider tokenData={token}>\n                <UserProvider userData={user}>\n                \n                <Bar />\n              <Routes>\n                  <Route \n                    path='/login/*' \n                    element={<Login/>} />\n                  <Route \n                    path='/registration/*' \n                    element={<Registration/>} />\n                  <Route \n                    path='/admin/chat/*' \n                    element={\n                      <RequireAuth>\n                        <RequireAdmin>\n                          <ChatAdmin/>\n                        </RequireAdmin>\n                      </RequireAuth>\n                      \n                      } />\n\n                  <Route \n                    path='/admin/chat/messages/*' \n                    element={\n                      <RequireAuth>\n                        <RequireAdmin>\n                        <ChatMessage />\n                        </RequireAdmin>\n                      </RequireAuth>\n                      \n                      } />\n                  <Route \n                    path='/user/chat/*' \n                    element={\n                      <RequireAuth>\n                        <RequireUser>\n                          <ChatUser/>\n                        </RequireUser>\n                      </RequireAuth>\n                      \n                      } />\n                  <Route \n                    path='/user/chat/messages/*' \n                    element={\n                      <RequireAuth>\n                        <RequireUser>\n                          <ChatMessage />\n                        </RequireUser>\n                      </RequireAuth>\n                      \n                      } />\n                  <Route path='/error/*' element={<Error/>} />\n                  \n                  <Route path=\"/\" element={<Navigate to=\"/user/chat\" replace />}/>\n              </Routes>\n              </UserProvider>\n              </AuthProvider>\n\n      </BrowserRouter>\n  </React.StrictMode> \n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n    <App/>\n);"],"sourceRoot":""}